package leetcode13;
/*
 * Given a roman numeral, convert it to an integer.
 * Input is guaranteed to be within the range from 1 to 3999.
 */
public class code13 {
	public int romanToInt(String s) {
        int ret = 0;
        int i=s.length()-1;
        while(i>=0)	{
        	if(s.charAt(i)=='I'){
        		System.out.println("1");
        		ret+=1;
        		if(i==0)
        			break;
        		System.out.println(ret);
        	}else if(s.charAt(i)=='V'){
        		System.out.println("5");
        		ret+=5;
        		if(i==0)
        			break;
        		if(s.charAt(--i)=='I')
        			ret--;
        		else
        			i++;
        		System.out.println(ret);
        	}else if(s.charAt(i)=='X'){
        		System.out.println("10");
        		ret+=10;
        		if(i==0)
        			break;
        		if(s.charAt(--i)=='I')
        			ret--;
        		else
        			i++;
        		System.out.println(ret);
        	}else if(s.charAt(i)=='L'){
        		System.out.println("50");
        		ret+=50;
        		if(i==0)
        			break;
        		if(s.charAt(--i)=='X')
        			ret-=10;
        		else
        			i++;
        		System.out.println(ret);
        	}else if(s.charAt(i)=='C'){
        		System.out.println("100");
        		ret+=100;
        		if(s.charAt(--i)=='X')
        			ret-=10;
        		else
        			i++;
        		System.out.println(ret);
        	}else if(s.charAt(i)=='D'){
        		System.out.println("500");
        		ret+=500;
        		if(i==0)
        			break;
        		if(s.charAt(--i)=='C')
        			ret-=100;
        		else
        			i++;
        		System.out.println(ret);
        	}else if(s.charAt(i)=='M'){
        		System.out.println("1000");
        		ret+=1000;
        		System.out.println(ret);
        		if(i==0)
        			break;
        		if(s.charAt(--i)=='C')
        			ret-=100;
        		else
        			i++;
        	}
        	i--;
        }
        return ret;
    }
}

