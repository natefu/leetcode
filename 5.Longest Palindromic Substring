package leetcode5;
/*
 * Given a string S, find the longest palindromic substring in S. 
 * You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.
 */
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class code5 {
	public String longestPalindrome(String s) {
		//
        String substring = "";
        
        for(int i=0;i<s.length();i++){
        	int j;
        	for(j=0;j+i<s.length()&&i-j>=0;j++){
        		if(s.charAt(i-j)==s.charAt(i+j)){
        			if(2*j+1>substring.length()){
        				substring = s.substring(i-j, i+j+1);
        			}
        		}else
        			break;
        	}
        	for(j=0;j+i+1<s.length()&&i-j>=0;j++){
        		if(s.charAt(i-j)==s.charAt(i+j+1)){
        			if(2*(j+1)>substring.length())
        				substring = s.substring(i-j,i+j+2);
        		}else
        			break;
        	}
        }
        
        return substring;
    }
}
