
package leetcode24;
/*
 * Given a linked list, swap every two adjacent nodes and return its head.
 * For example,
 * Given 1->2->3->4, you should return the list as 2->1->4->3.
 * Your algorithm should use only constant space. 
 * You may not modify the values in the list, only nodes itself can be changed.
 */
import leetcode2.ListNode;

public class code24 {
	public ListNode swapPairs(ListNode head) {
		if(head==null) return null;
		if(head.next==null) return head;
		ListNode fhead = new ListNode(0);
		fhead.next = head;
		ListNode fackhead = fhead;
		while(fackhead.next!=null&&fackhead.next.next!=null){
			ListNode tmp = fackhead.next;
			fackhead.next = fackhead.next.next;
			tmp.next = fackhead.next.next;
			fackhead.next.next=tmp;
			fackhead = fackhead.next.next;
		}
		return fhead.next;
	}
}
